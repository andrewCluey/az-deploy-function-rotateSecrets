######################################################################
# Build, test & deploy the Azure Function app on pushes to main.
######################################################################
name: Staging deploy function App

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - development
    paths-ignore:
      - '**/**.md'

env:

  # all Azure Functions are at the root of the project
  AZURE_FUNCTION_APP_PACKAGE_PATH: ''

  # ARM deployment instance name (used to extract outputs)
  # -----------------------------------------------
  DEPLOYMENT_NAME: GH_CICD_${{ github.run_id }}

  # bot credentials deployments rights on resource group
  # -----------------------------------------------
  # AZURE_CLIENT_ID: <secret>
  # AZURE_TENANT_ID: <secret>
  # AZURE_SUBSCRIPTION_ID: <secret>

  # function app settings
  # -----------------------------------------------
  # AZURE_FUNCTIONAPP_RESOURCEGROUP: <secret>
  # AZURE_RESOURCE_NAME_PREFIX: <secret>

  # variables dynamically set in workflow after running ARM deployment step
  # -----------------------------------------------
  # FUNCTION_APP_NAME: <env>
  # FUNCTION_APP_SLOT_NAME: <env>
  # AZURE_APPCONFIG_NAME: <env>
  # FUNCTION_APP_PUB_PROFILE: <env>

# GH permission requests for OpenID token for auth with Azure federated creds
permissions:
  id-token: write
  contents: read

jobs:
  deploy_infra:
    if: "!contains(github.event.head_commit.message,'[skip-infra]')"
    name: Deploy infrastructure
    runs-on: ubuntu-latest
    steps:
      ######################################################################
      # checkout full codebase
      ######################################################################
      - name: Checkout repo codebase
        uses: actions/checkout@main
        with:
          fetch-depth: 1
          clean: true
          submodules: false

      ######################################################################
      # login to Azure CLI via federated credential
      ######################################################################
      - name: 🔑 Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      ######################################################################
      # Provision Azure resources
      ######################################################################
      - name: 🚀 Deploy infrastructure
        run: |
          az version
          az bicep version
          az deployment group create --name $DEPLOYMENT_NAME --resource-group $RESOURCE_GROUP --template-file ./iac/main.bicep --parameters funcStorageAccountName=$STORAGEACCOUNT_PREFIX
        env:
          DEPLOYMENT_NAME: ${{ env.DEPLOYMENT_NAME }}
          DEPLOYMENT_NAME_ID: ${{ github.run_id }}
          RESOURCE_GROUP: ${{ secrets.AZURE_FUNCTIONAPP_RESOURCEGROUP }}
          RESOURCE_NAME_PREFIX: ${{ secrets.AZURE_RESOURCE_NAME_PREFIX }}
          STORAGEACCOUNT_PREFIX: ${{ secrets.STORAGEACCOUNT_PREFIX }}

  deploy_app:
    if: "!contains(github.event.head_commit.message,'[skip-cd]')"
    name: Deploy to Azure Function app staging slot
    runs-on: ubuntu-latest
    needs: [deploy_infra]
    steps:
      ######################################################################
      # checkout full codebase
      ######################################################################
      - name: Checkout repo codebase
        uses: actions/checkout@main
        with:
          fetch-depth: 1
          clean: true
          submodules: false

      ######################################################################
      # login to Azure CLI via federated credential
      ######################################################################
      - name: 🔑 Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      ######################################################################
      # promote deployment provisioning outputs to workflow variables
      ######################################################################
      - name: Extract deployment job ouputs to env variables
        run: |
          echo "FUNCTION_APP_NAME=$(az deployment group show --name $DEPLOYMENT_NAME --resource-group $RESOURCE_GROUP --query 'properties.outputs.functionAppName.value' --output tsv)" >> $GITHUB_ENV
          echo "FUNCTION_APP_SLOT_NAME=$(az deployment group show --name $DEPLOYMENT_NAME --resource-group $RESOURCE_GROUP --query 'properties.outputs.functionAppSlot.value' --output tsv)" >> $GITHUB_ENV
          echo "AZURE_APPCONFIG_NAME=$(az deployment group show --name $DEPLOYMENT_NAME --resource-group $RESOURCE_GROUP --query 'properties.outputs.appConfigName.value' --output tsv)" >> $GITHUB_ENV
        env:
          DEPLOYMENT_NAME: ${{ env.DEPLOYMENT_NAME }}
          RESOURCE_GROUP: ${{ secrets.AZURE_FUNCTIONAPP_RESOURCEGROUP }}

      ######################################################################
      # acquire publish profile for Azure Functions App
      ######################################################################
      - name: ⬇️ Download Azure Function app publishing profile
        id: az_funcapp_publishing_profile
        run: |
          echo "$FUNCTION_APP_SLOT_NAME"
          echo "FUNCTION_APP_PUB_PROFILE=$(az functionapp deployment list-publishing-profiles --subscription $AZURE_SUBSCRIPTION_ID --resource-group $FUNCTION_APP_RESOURCE_GROUP --name $FUNCTION_APP_NAME --slot $FUNCTION_APP_SLOT_NAME --xml)" >> $GITHUB_ENV
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          FUNCTION_APP_RESOURCE_GROUP: ${{ secrets.AZURE_FUNCTIONAPP_RESOURCEGROUP }}
          FUNCTION_APP_NAME: ${{ env.FUNCTION_APP_NAME }}
          FUNCTION_APP_SLOT_NAME: ${{ env.FUNCTION_APP_SLOT_NAME }}

      ######################################################################
      # deploy function app
      ######################################################################
      - name: 🚀 Deploy Azure Function app code
        uses: Azure/functions-action@v1.5.0
        with:
          # Name of the Azure Function App
          app-name: ${{ env.FUNCTION_APP_NAME }}
          # Path to package or folder. *.zip or a folder to deploy
          package: '.'
          # Publish profile (*.publishsettings) file contents with web deploy secrets
          publish-profile: ${{ env.FUNCTION_APP_PUB_PROFILE }}
          # Remove unwanted files defined in .funcignore file (default: 'false'). When this is set to 'true', 'package' should point to the folder of host.json.
          respect-funcignore: true
