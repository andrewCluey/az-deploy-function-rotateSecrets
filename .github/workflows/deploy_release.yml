name: Deploy upon release

on:
  release:
    types: [published]

env:
  KV_SUBSCRIPTION_ID: '7df4fea2-d719-4abe-890b-37cd0298be98'
  KV_NAME: 'kv-ghspns-01'
  SPN_SECRET_NAME: 'azfunc-secretRotate-bot-secret'
  SPN_CLIENTID_SECRET: 'azfunc-secretRotate-bot-clientid'
  
  
  # ARM deployment instance name (used to extract outputs)
  # -----------------------------------------------
  DEPLOYMENT_NAME: GH_CICD_${{ github.run_id }}
    
  # bot credentials deployments rights on resource group
  # -----------------------------------------------
  # AZURE_CLIENT_ID: <secret>
  # AZURE_TENANT_ID: <secret>
  # AZURE_SUBSCRIPTION_ID: <secret>
    
  # function app settings
  # -----------------------------------------------
  # AZURE_FUNCTIONAPP_RESOURCEGROUP: <secret>
  # AZURE_RESOURCE_NAME_PREFIX: <secret>    
  # variables dynamically set in workflow after running ARM deployment step
  # -----------------------------------------------
  # FUNCTION_APP_NAME: <env>
  # FUNCTION_APP_SLOT_NAME: <env>
  # AZURE_APPCONFIG_NAME: <env>
  # FUNCTION_APP_PUB_PROFILE: <env>
    
  # GH permission requests for OpenID token for auth with Azure federated creds
  permissions:
    id-token: write
    contents: read

jobs:
  deploy-published-release:
    runs-on: ubuntu-latest
    steps:
      ######################################################################
      # login to Azure CLI via federated credential
      ######################################################################
      - name: ðŸ”‘ Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      
      ######################################################################
      # get SPN auth secrets
      ######################################################################

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.49.0
          inlineScript: |
            az account show
            echo "SPN_SECRET=$(az keyvault secret show --vault-name $KV_NAME --name $SPN_SECRET_NAME --ouput tsv)" >> $GITHUB_ENV
            echo "SPN_CLIENTID=$(az keyvault secret show --vault-name $KV_NAME --name $SPN_CLIENTID_SECRET --ouput tsv)" >> $GITHUB_ENV
          env:
            SPN_SECRET_NAME: ${{ env.SPN_SECRET_NAME }}
            KV_NAME: ${{ env.KV_NAME }}
            SPN_CLIENTID_SECRET: ${{ env.SPN_CLIENTID_SECRET }}
            #SPN_NAME: ${{ env.environment }}${{ env.SPN_SUFFIX }}

      ######################################################################
      # Login to Azure using returned Secrets & swap deployment slot
      ######################################################################
      - name: ðŸ”‘ SPN Login to Azure
      run: |
        az login --service-principal --tenant $TENANT_ID --username $SPN_CLIENTID --password $SPN_SECRET    
      env:
        TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: ðŸ”€ Swap staging & production deployment slot
        run: |
          az functionapp deployment slot swap --resource-group $FUNCTION_APP_RESOURCE_GROUP --name $FUNCTION_APP_NAME --slot $FUNCTION_APP_STAGING_SLOT --target-slot $FUNCTION_APP_PRODUCTION_SLOT    
        env:
          FUNCTION_APP_RESOURCE_GROUP: ${{ secrets.AZURE_FUNCTIONAPP_RESOURCEGROUP }}
          FUNCTION_APP_NAME: ${{ env.AZURE_FUNCTION_APP_NAME }}
          FUNCTION_APP_STAGING_SLOT: ${{ env.AZURE_FUNCTION_APP_STAGING_DEPLOYMENT_SLOT }}
          FUNCTION_APP_PRODUCTION_SLOT: ${{ env.AZURE_FUNCTION_APP_PRODUCTION_DEPLOYMENT_SLOT }}
